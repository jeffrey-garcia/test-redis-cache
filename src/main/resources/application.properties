# Disable security to allow access actuator sensitive endpoints
# (includes environment, health, beans, metrics, trace, configprops, and dump)
management.security.enabled=false

# Local Redis configuration
#redis.host=localhost
#redis.port=6379
#redis.timout=60000

### Embedded Tomcat server settings ###
########################################################################
# The actual number of incoming requests that can be processed
# concurrently is bounded by the maximum number of worker threads
#
# Assumption:
# server.tomcat.max-connections=2
# server.tomcat.max-threads=1
#
# In the configuration above, for a blocking web service, while the 1st
# incoming request is being processed (due to I/O latency), the 2nd will
# be put on queue and the 3rd one will be dropped (unless client-side
# triggered a retry)
#
# However, for a reactive web service, while the 1st incoming request
# is being processed, the 2nd will still be accepted (because max conn=2)
# and processed into the same thread since the web service is now
# non-blocking. As such more connection can be entertained even with a
# limited capacity/resource. Note that because max conn=2, the 3rd
# incoming request (with 1st and 2nd still processing) will be dropped,
# this align the behavior for a blocking web service
#
########################################################################
## Maximum number of connections that the server will accept and process at any given time.
server.tomcat.max-connections=250
## Maximum amount of worker threads (the actual threads that process the request)
server.tomcat.max-threads=200